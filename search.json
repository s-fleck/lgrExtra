[{"path":"https://s-fleck.github.io/lgrExtra/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Stefan Fleck Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan Fleck. Author, maintainer. Jimmy Briggs. Contributor, reviewer.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fleck S (2025). lgrExtra: Extra Appenders 'lgr'. R package version 0.2.1, https://s-fleck.github.io/lgrExtra/.","code":"@Manual{,   title = {lgrExtra: Extra Appenders for 'lgr'},   author = {Stefan Fleck},   year = {2025},   note = {R package version 0.2.1},   url = {https://s-fleck.github.io/lgrExtra/}, }"},{"path":"https://s-fleck.github.io/lgrExtra/index.html","id":"lgrextra","dir":"","previous_headings":"","what":"Extra Appenders for lgr","title":"Extra Appenders for lgr","text":"Extra appenders logging push notifications, email, databases, destinations lgr. Please refer function reference details examples","code":""},{"path":"https://s-fleck.github.io/lgrExtra/index.html","id":"development-status","dir":"","previous_headings":"","what":"Development status","title":"Extra Appenders for lgr","text":"appenders provided lgrExtra varying stability. Elasticsearch Dynatrace ready production use (use production), Database-based appenders still considered experimental prove--concept. AppenderDynatrace still labeled experimental rather new default layout might still change minor ways.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extra Appenders for lgr","text":"can install stable version CRAN current development version directly github","code":"install.packages(\"lgrExtra\") #install.packages(\"remotes\") remotes::install_github(\"s-fleck/lgrExtra\")"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"Log AWS CloudWatch Logs.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"buffered-logging","dir":"Reference","previous_headings":"","what":"Buffered Logging","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"default, AppenderAWSCloudWatchLog writes LogEvent can relatively slow. improve performance possible tell AppenderAWSCloudWatchLog buffer db writes setting buffer_size something greater 0. buffer written AWS CloudWatch whenever full (buffer_size), whenever LogEvent level fatal error encountered (flush_threshold), Appender garbage collected (flush_on_exit), .e. close R session shortly remove Appender object via rm().","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"creating-a-new-appender","dir":"Reference","previous_headings":"","what":"Creating a New Appender","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"AppenderAWSCloudWatchLog linked AWS Account using paws sdk package. log group exist created either Appender first instantiated (likely) first LogEvent written table.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> AppenderAWSCloudWatchLog","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"client paws.management cloudwatchlogs client log_group_name name AWS CloudWatch log group. log_stream_name name log stream within log_group_name.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$format() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush() lgr::AppenderMemory$show()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"AppenderAWSCloudWatchLog$new() AppenderAWSCloudWatchLog$set_client() AppenderAWSCloudWatchLog$set_log_group_name() AppenderAWSCloudWatchLog$set_log_stream_name() AppenderAWSCloudWatchLog$set_log_group_retention_days() AppenderAWSCloudWatchLog$flush()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"","code":"AppenderAWSCloudWatchLog$new(   log_group_name,   log_stream_name = paste(log_group_name, Sys.Date(), sep = \"/\"),   log_group_retention_days = NULL,   paws_config = list(),   threshold = NA_integer_,   layout = LayoutFormat$new(fmt = \"%L: %m\", colors = list()),   buffer_size = 0,   flush_threshold = \"error\",   flush_on_exit = TRUE,   flush_on_rotate = TRUE,   should_flush = NULL,   filters = NULL )"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"log_group_name name AWS CloudWatch log group. log_stream_name name log stream within log_group_name. log_group_retention_days number days retain log events specified log group. AWS API Documentation paws_config list paws config. Please see section https://www.paws-r-sdk.com/docs/set_service_parameter/ threshold, flush_threshold, layout, buffer_size see lgr::AppenderBuffer","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"method-set-client-","dir":"Reference","previous_headings":"","what":"Method set_client()","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"set paws.management cloudwatchlogs client","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"","code":"AppenderAWSCloudWatchLog$set_client(client)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"client (paws.management::cloudwatchlogs) client. AWS CloudWatch","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"method-set-log-group-name-","dir":"Reference","previous_headings":"","what":"Method set_log_group_name()","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"set log group name AWS CloudWatch","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"","code":"AppenderAWSCloudWatchLog$set_log_group_name(log_group_name)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"log_group_name (character) name AWS CloudWatch","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"method-set-log-stream-name-","dir":"Reference","previous_headings":"","what":"Method set_log_stream_name()","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"set log stream name within AWS CloudWatch log group","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"","code":"AppenderAWSCloudWatchLog$set_log_stream_name(log_stream_name)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"log_stream_name (character) log stream name AWS CloudWatch log group","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"method-set-log-group-retention-days-","dir":"Reference","previous_headings":"","what":"Method set_log_group_retention_days()","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"set log group retention days AWS CloudWatch Log Group.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"","code":"AppenderAWSCloudWatchLog$set_log_group_retention_days(log_group_retention_days)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"log_group_retention_days number days retain log events specified log group. AWS API Documentation","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"","code":"AppenderAWSCloudWatchLog$flush()"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderAWSCloudWatchLog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log to AWS CloudWatch Logs — AppenderAWSCloudWatchLog","text":"","code":"if (FALSE) { # \\dontrun{   library(lgrExtra)   app <- AppenderAWSCloudWatchLog$new(log_group_name = \"lgrExtra\")   lg <- lgr::get_logger(\"lgrExtra\")$add_appender(app)$set_propagate(FALSE)   lg$info(\"test\")   print(lg$appenders[[1]]$data)    invisible(lg$config(NULL))  # cleanup } # }"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Log to databases via DBI — AppenderDbi","title":"Log to databases via DBI — AppenderDbi","text":"Log database table DBI compatible backend. Please aware AppenderDbi support case sensitive / quoted column names, advised use -lowercase names custom fields (see ... argument lgr::LogEvent). appending database table LogEvent values column exists target table appended, others ignored. NOTE: AppenderDbi works reliable databases, still considered experimental, especially configuration excessively complicated. Expect breaking changes AppenderDbi future.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log to databases via DBI — AppenderDbi","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"buffered-logging","dir":"Reference","previous_headings":"","what":"Buffered Logging","title":"Log to databases via DBI — AppenderDbi","text":"default, AppenderDbi writes LogEvent directly target database can relatively slow. improve performance possible tell AppenderDbi buffer db writes setting buffer_size something greater 0. buffer written database whenever full (buffer_size), whenever LogEvent level fatal error encountered (flush_threshold), Appender garbage collected (flush_on_exit), .e. close R session shortly remove Appender object via rm().","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"creating-a-new-appender","dir":"Reference","previous_headings":"","what":"Creating a New Appender","title":"Log to databases via DBI — AppenderDbi","text":"AppenderDbi linked database table via table argument. table exist created either Appender first instantiated (likely) first LogEvent written table. Rather rely feature, recommended create target table first using SQL CREATE TABLE statement safer flexible. See also LayoutDbi.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"choosing-the-correct-dbi-layout","dir":"Reference","previous_headings":"","what":"Choosing the correct DBI Layout","title":"Log to databases via DBI — AppenderDbi","text":"Layouts relational database tables tricky strict column types restrictions. top implementation details vary database backends. make setting AppenderDbi painless possible, helper function select_dbi_layout() tries automatically determine sensible LayoutDbi settings based conn - exists database already - table. table exist database start logging, new table created col_types layout.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log to databases via DBI — AppenderDbi","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> AppenderDbi","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Log to databases via DBI — AppenderDbi","text":"conn DBI connection close_on_exit TRUE FALSE. Close Database connection Logger removed? col_types named character vector providing information column types database. column types reported depends database driver. example, SQLite returns human readable data types (character, double, ...) IBM DB2 returns numeric codes representing data type. table character scalar DBI::Id specifying target database table table_name character scalar. Like $table, always returns character scalar table_id DBI::Id. Like $table, always returns DBI::Id","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log to databases via DBI — AppenderDbi","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$format() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log to databases via DBI — AppenderDbi","text":"AppenderDbi$new() AppenderDbi$set_close_on_exit() AppenderDbi$set_conn() AppenderDbi$show() AppenderDbi$flush()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via DBI — AppenderDbi","text":"","code":"AppenderDbi$new(   conn,   table,   threshold = NA_integer_,   layout = select_dbi_layout(conn, table),   close_on_exit = TRUE,   buffer_size = 0,   flush_threshold = \"error\",   flush_on_exit = TRUE,   flush_on_rotate = TRUE,   should_flush = NULL,   filters = NULL )"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to databases via DBI — AppenderDbi","text":"conn, table see section Fields threshold, flush_threshold, layout, buffer_size see lgr::AppenderBuffer","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via DBI — AppenderDbi","text":"","code":"AppenderDbi$set_close_on_exit(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via DBI — AppenderDbi","text":"","code":"AppenderDbi$set_conn(conn)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via DBI — AppenderDbi","text":"","code":"AppenderDbi$show(threshold = NA_integer_, n = 20)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via DBI — AppenderDbi","text":"","code":"AppenderDbi$flush()"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDbi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log to databases via DBI — AppenderDbi","text":"","code":"if (requireNamespace(\"RSQLite\")){   app <- AppenderDbi$new(     conn = DBI::dbConnect(RSQLite::SQLite(), dbname = \":memory:\"),     table = \"log\"    )    lg <- lgr::get_logger(\"test/dbi\")$     add_appender(app, \"db\")$     set_propagate(FALSE)   lg$info(\"test\")   print(lg$appenders[[1]]$data)    invisible(lg$config(NULL))  # cleanup } #> Loading required namespace: RSQLite #> creating 'log' with columns: level integer, timestamp TEXT, logger TEXT, caller TEXT, msg TEXT #>   level           timestamp   logger caller  msg #> 1   400 2025-08-25 07:35:25 test/dbi   eval test"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract class for digests (multi-log message notifications) — AppenderDigest","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"Digests abstract class report-like output contain several log messages title; e.g. E-mail containing last 10 log messages error encountered push notification. Abstract classes, exported package developers.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"Abstract classes instantiated $new() therefore return anything. solely developers want write extension lgr.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> AppenderDigest","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"subject_layout lgr::Layout used format last lgr::LogEvent Appenders buffer flushed. result used subject digest (example, E-mail subject).","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$flush() lgr::AppenderMemory$format() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush() lgr::AppenderMemory$show()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"AppenderDigest$new() AppenderDigest$set_subject_layout()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"","code":"AppenderDigest$new(...)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDigest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for digests (multi-log message notifications) — AppenderDigest","text":"","code":"AppenderDigest$set_subject_layout(layout)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Log to Dynatrace via HTTP — AppenderDynatrace","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"Log Dynatrace via Dynatrace log ingestion API.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> AppenderDynatrace","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"url string url api_key string api_key. Also referred \"Api Token\"","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$format() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"AppenderDynatrace$new() AppenderDynatrace$set_url() AppenderDynatrace$set_api_key() AppenderDynatrace$get_data() AppenderDynatrace$show() AppenderDynatrace$flush()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"","code":"AppenderDynatrace$new(   url,   api_key,   threshold = NA_integer_,   layout = DynatraceLayout,   buffer_size = 0,   flush_threshold = \"error\",   flush_on_exit = TRUE,   flush_on_rotate = TRUE,   should_flush = NULL,   filters = NULL )"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"url see section Fields threshold, flush_threshold, layout, buffer_size see lgr::AppenderBuffer","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"","code":"AppenderDynatrace$set_url(url)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"","code":"AppenderDynatrace$set_api_key(api_key)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"Get log data.frame: supported Dynatrace","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"","code":"AppenderDynatrace$get_data(n = 20L, threshold = NA, result_type = \"data.frame\")"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"method-show-","dir":"Reference","previous_headings":"","what":"Method show()","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"Show log console: supported Dynatrace","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"","code":"AppenderDynatrace$show(threshold = NA_integer_, n = 20)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderDynatrace.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to Dynatrace via HTTP — AppenderDynatrace","text":"","code":"AppenderDynatrace$flush()"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Log to ElasticSearch — AppenderElasticSearch","title":"Log to ElasticSearch — AppenderElasticSearch","text":"NOTE: Maturing; yet fully documented well tested production scenario","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log to ElasticSearch — AppenderElasticSearch","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log to ElasticSearch — AppenderElasticSearch","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> AppenderElasticSearch","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Log to ElasticSearch — AppenderElasticSearch","text":"conn ElasticSearch connection index target ElasticSearch index. May either : character scalar, function returning character scalar index_create_body character scalar json string (NULL). function returning character scalar json string (NULL) Optional settings, mappings, aliases, etc... case target index created logger. See https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-create","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log to ElasticSearch — AppenderElasticSearch","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$format() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log to ElasticSearch — AppenderElasticSearch","text":"AppenderElasticSearch$new() AppenderElasticSearch$set_conn() AppenderElasticSearch$get_data() AppenderElasticSearch$show() AppenderElasticSearch$flush()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to ElasticSearch — AppenderElasticSearch","text":"","code":"AppenderElasticSearch$new(   conn,   index,   threshold = NA_integer_,   layout = ElasticSearchLayout,   index_create_body = NULL,   buffer_size = 0,   flush_threshold = \"error\",   flush_on_exit = TRUE,   flush_on_rotate = TRUE,   should_flush = NULL,   filters = NULL )"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to ElasticSearch — AppenderElasticSearch","text":"conn, index see section Fields threshold, flush_threshold, layout, buffer_size see lgr::AppenderBuffer data data.frame. content index","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to ElasticSearch — AppenderElasticSearch","text":"","code":"AppenderElasticSearch$set_conn(conn)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to ElasticSearch — AppenderElasticSearch","text":"","code":"AppenderElasticSearch$get_data(   n = 20L,   threshold = NA,   result_type = \"data.frame\" )"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to ElasticSearch — AppenderElasticSearch","text":"n integer scalar. Retrieve last n log entries match threshold threshold character integer scalar. minimum log level displayed result_type character scalar. : data.frame data.table (shortcut: dt) list (unprocessed list ElasticSearch metadata) json (raw ElasticSearch JSON)","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Log to ElasticSearch — AppenderElasticSearch","text":"see result_type","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to ElasticSearch — AppenderElasticSearch","text":"","code":"AppenderElasticSearch$show(threshold = NA_integer_, n = 20)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderElasticSearch.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to ElasticSearch — AppenderElasticSearch","text":"","code":"AppenderElasticSearch$flush()"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":null,"dir":"Reference","previous_headings":"","what":"Send emails via the Gmail REST API — AppenderGmail","title":"Send emails via the Gmail REST API — AppenderGmail","text":"Send mails via gmailr::gm_send_message(). Appender keeps -memory buffer like lgr::AppenderBuffer. buffer flushed, usually event specified magnitude encountered, buffered events concatenated single message. default behavior push last 30 log events case fatal event encountered. NOTE: Appender requires set google API authorization, please refer documentation gmailr details.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send emails via the Gmail REST API — AppenderGmail","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Send emails via the Gmail REST API — AppenderGmail","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> lgrExtra::AppenderDigest -> lgrExtra::AppenderMail -> AppenderGmail","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Send emails via the Gmail REST API — AppenderGmail","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush() lgr::AppenderMemory$show() lgrExtra::AppenderDigest$set_subject_layout() lgrExtra::AppenderMail$format() lgrExtra::AppenderMail$set_bcc() lgrExtra::AppenderMail$set_cc() lgrExtra::AppenderMail$set_from() lgrExtra::AppenderMail$set_html() lgrExtra::AppenderMail$set_to()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Send emails via the Gmail REST API — AppenderGmail","text":"AppenderGmail$new() AppenderGmail$flush()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Send emails via the Gmail REST API — AppenderGmail","text":"see AppenderMail details","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send emails via the Gmail REST API — AppenderGmail","text":"","code":"AppenderGmail$new(   to,   threshold = NA_integer_,   flush_threshold = \"fatal\",   layout = LayoutFormat$new(fmt = \"%L [%t] %m %f\", timestamp_fmt = \"%H:%M:%S\"),   subject_layout = LayoutFormat$new(fmt = \"[LGR] %L: %m\"),   buffer_size = 30,   from = get_user(),   cc = NULL,   bcc = NULL,   html = FALSE,   filters = NULL )"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderGmail.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Send emails via the Gmail REST API — AppenderGmail","text":"","code":"AppenderGmail$flush()"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract class for email Appenders — AppenderMail","title":"Abstract class for email Appenders — AppenderMail","text":"Abstract classes, exported package developers.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abstract class for email Appenders — AppenderMail","text":"Abstract classes instantiated $new() therefore return anything. solely developers want write extension lgr.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract class for email Appenders — AppenderMail","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> lgrExtra::AppenderDigest -> AppenderMail","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Abstract class for email Appenders — AppenderMail","text":"character vector. email addresses recipient character vector. email address sender cc character vector. email addresses cc-recipients (carbon copy) bcc character vector. email addresses bcc-recipients (blind carbon copy) html logical scalar.  Send html email message? currently format log contents monospace verbatim text.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract class for email Appenders — AppenderMail","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$flush() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush() lgr::AppenderMemory$show() lgrExtra::AppenderDigest$set_subject_layout()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract class for email Appenders — AppenderMail","text":"AppenderMail$new() AppenderMail$set_to() AppenderMail$set_from() AppenderMail$set_cc() AppenderMail$set_bcc() AppenderMail$set_html() AppenderMail$format()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for email Appenders — AppenderMail","text":"","code":"AppenderMail$new(...)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for email Appenders — AppenderMail","text":"","code":"AppenderMail$set_to(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for email Appenders — AppenderMail","text":"","code":"AppenderMail$set_from(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for email Appenders — AppenderMail","text":"","code":"AppenderMail$set_cc(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for email Appenders — AppenderMail","text":"","code":"AppenderMail$set_bcc(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for email Appenders — AppenderMail","text":"","code":"AppenderMail$set_html(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderMail.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract class for email Appenders — AppenderMail","text":"","code":"AppenderMail$format(color = FALSE, ...)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":null,"dir":"Reference","previous_headings":"","what":"Log to databases via pool — AppenderPool","title":"Log to databases via pool — AppenderPool","text":"Log database table using connection pool pool package. provides better performance connection management compared direct DBI connections, especially applications concurrent users. Like AppenderDbi, support case sensitive / quoted column names, advised use -lowercase names custom fields (see ... argument lgr::LogEvent).","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log to databases via pool — AppenderPool","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"benefits-of-pooled-connections","dir":"Reference","previous_headings":"","what":"Benefits of Pooled Connections","title":"Log to databases via pool — AppenderPool","text":"Using connection pools instead direct DBI connections provides several advantages: Connections reused rather created query Connection management automated (creation, validation, destruction) Better handles concurrent requests multi-user applications Improves overall performance reducing connection overhead","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"buffered-logging","dir":"Reference","previous_headings":"","what":"Buffered Logging","title":"Log to databases via pool — AppenderPool","text":"Like AppenderDbi, AppenderPool supports buffered logging setting buffer_size something greater 0. buffer written database whenever full (buffer_size), whenever LogEvent level fatal error encountered (flush_threshold), Appender garbage collected (flush_on_exit).","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"creating-a-new-appender","dir":"Reference","previous_headings":"","what":"Creating a New Appender","title":"Log to databases via pool — AppenderPool","text":"AppenderPool linked database table via table argument. table exist created either Appender first instantiated first LogEvent written table. recommended create target table first using SQL CREATE TABLE statement control safety.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log to databases via pool — AppenderPool","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> AppenderPool","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Log to databases via pool — AppenderPool","text":"pool pool connection close_on_exit TRUE FALSE. Close pool connection Logger removed? Usually necessary pools manage lifecycle. col_types named character vector providing information column types database. table character scalar DBI::Id specifying target database table table_name character scalar. Like $table, always returns character scalar table_id DBI::Id. Like $table, always returns DBI::Id","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log to databases via pool — AppenderPool","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$format() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log to databases via pool — AppenderPool","text":"AppenderPool$new() AppenderPool$set_close_on_exit() AppenderPool$set_pool() AppenderPool$show() AppenderPool$flush()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via pool — AppenderPool","text":"","code":"AppenderPool$new(   pool,   table,   threshold = NA_integer_,   layout = select_dbi_layout(pool::poolCheckout(pool), table),   close_on_exit = FALSE,   buffer_size = 0,   flush_threshold = \"error\",   flush_on_exit = TRUE,   flush_on_rotate = TRUE,   should_flush = NULL,   filters = NULL )"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to databases via pool — AppenderPool","text":"pool, table see section Fields threshold, flush_threshold, layout, buffer_size see lgr::AppenderBuffer","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via pool — AppenderPool","text":"","code":"AppenderPool$set_close_on_exit(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via pool — AppenderPool","text":"","code":"AppenderPool$set_pool(pool)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via pool — AppenderPool","text":"","code":"AppenderPool$show(threshold = NA_integer_, n = 20)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to databases via pool — AppenderPool","text":"","code":"AppenderPool$flush()"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log to databases via pool — AppenderPool","text":"","code":"if (requireNamespace(\"RSQLite\") && requireNamespace(\"pool\")){   pool <- pool::dbPool(     drv = RSQLite::SQLite(),     dbname = \":memory:\"   )    app <- AppenderPool$new(     pool = pool,     table = \"log\"   )    lg <- lgr::get_logger(\"test/pool\")$     add_appender(app, \"db\")$     set_propagate(FALSE)   lg$info(\"test\")   print(lg$appenders[[1]]$data)    invisible(lg$config(NULL)) # cleanup   pool::poolClose(pool) } #> Loading required namespace: pool #> creating 'log' with columns: level integer, timestamp TEXT, logger TEXT, caller TEXT, msg TEXT #>   level           timestamp    logger caller  msg #> 1   400 2025-08-25 07:35:27 test/pool   eval test"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":null,"dir":"Reference","previous_headings":"","what":"Send push-notifications via RPushbullet — AppenderPushbullet","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"Send push notifications via Pushbullet. Appender keeps -memory buffer like lgr::AppenderBuffer. buffer flushed, usually event specified magnitude encountered, buffered events concatenated single message sent RPushbullet::pbPost(). default behavior push last 7 log events case fatal event encountered.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> lgrExtra::AppenderDigest -> AppenderPushbullet","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"apikey see RPushbullet::pbPost() recipients see RPushbullet::pbPost() email see RPushbullet::pbPost() channel see RPushbullet::pbPost() devices see RPushbullet::pbPost()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$format() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush() lgr::AppenderMemory$show() lgrExtra::AppenderDigest$set_subject_layout()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"AppenderPushbullet$new() AppenderPushbullet$flush() AppenderPushbullet$set_apikey() AppenderPushbullet$set_recipients() AppenderPushbullet$set_email() AppenderPushbullet$set_channel() AppenderPushbullet$set_devices()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"AppenderPushbullet$new(   threshold = NA_integer_,   flush_threshold = \"fatal\",   layout = LayoutFormat$new(fmt = \"%K  %t> %m %f\", timestamp_fmt = \"%H:%M:%S\"),   subject_layout = LayoutFormat$new(fmt = \"[LGR] %L: %m\"),   buffer_size = 6,   recipients = NULL,   email = NULL,   channel = NULL,   devices = NULL,   apikey = getOption(\"rpushbullet.key\"),   filters = NULL )"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"threshold, flush_threshold, layout, buffer_size see lgr::AppenderBuffer subject_layout lgr::LayoutFormat object. recipients, email, channel, devices, apikey see RPushbullet::pbPost","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"AppenderPushbullet$flush()"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"AppenderPushbullet$set_apikey(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"AppenderPushbullet$set_recipients(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"AppenderPushbullet$set_email(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"AppenderPushbullet$set_channel(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"AppenderPushbullet$set_devices(x)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderPushbullet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send push-notifications via RPushbullet — AppenderPushbullet","text":"","code":"if (requireNamespace(\"RPushbullet\") && !is.null(getOption(\"rpushbullet.key\")) ){   app <- AppenderPushbullet$new()    lg <- lgr::get_logger(\"test/dbi\")$     add_appender(app, \"pb\")$     set_propagate(FALSE)    lg$fatal(\"info\")   lg$fatal(\"test\")   invisible(lg$config(NULL)) }"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":null,"dir":"Reference","previous_headings":"","what":"Send emails via sendmailR — AppenderSendmail","title":"Send emails via sendmailR — AppenderSendmail","text":"Send mails via sendmailR::sendmail(), requires access SMTP server require authentication. Appender keeps -memory buffer like lgr::AppenderBuffer. buffer flushed, usually event specified magnitude encountered, buffered events concatenated single message. default behavior push last 30 log events case fatal event encountered.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send emails via sendmailR — AppenderSendmail","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Send emails via sendmailR — AppenderSendmail","text":"default Layout's fmt indents log entry 3 blanks. workaround Microsoft Outlook mess line breaks.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Send emails via sendmailR — AppenderSendmail","text":"lgr::Filterable -> lgr::Appender -> lgr::AppenderMemory -> lgrExtra::AppenderDigest -> lgrExtra::AppenderMail -> AppenderSendmail","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Send emails via sendmailR — AppenderSendmail","text":"control see sendmailR::sendmail() headers see sendmailR::sendmail()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Send emails via sendmailR — AppenderSendmail","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$set_layout() lgr::Appender$set_threshold() lgr::AppenderMemory$append() lgr::AppenderMemory$clear() lgr::AppenderMemory$set_buffer_size() lgr::AppenderMemory$set_flush_on_exit() lgr::AppenderMemory$set_flush_on_rotate() lgr::AppenderMemory$set_flush_threshold() lgr::AppenderMemory$set_should_flush() lgr::AppenderMemory$show() lgrExtra::AppenderDigest$set_subject_layout() lgrExtra::AppenderMail$format() lgrExtra::AppenderMail$set_bcc() lgrExtra::AppenderMail$set_cc() lgrExtra::AppenderMail$set_from() lgrExtra::AppenderMail$set_html() lgrExtra::AppenderMail$set_to()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Send emails via sendmailR — AppenderSendmail","text":"AppenderSendmail$new() AppenderSendmail$flush() AppenderSendmail$set_control() AppenderSendmail$set_headers()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Send emails via sendmailR — AppenderSendmail","text":"see AppenderMail details","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send emails via sendmailR — AppenderSendmail","text":"","code":"AppenderSendmail$new(   to,   control,   threshold = NA_integer_,   flush_threshold = \"fatal\",   layout = LayoutFormat$new(fmt = \"   %L [%t] %m %f\", timestamp_fmt = \"%H:%M:%S\"),   subject_layout = LayoutFormat$new(fmt = \"[LGR] %L: %m\"),   buffer_size = 29,   from = get_user(),   cc = NULL,   bcc = NULL,   html = FALSE,   headers = NULL,   filters = NULL )"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Send emails via sendmailR — AppenderSendmail","text":"","code":"AppenderSendmail$flush()"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Send emails via sendmailR — AppenderSendmail","text":"","code":"AppenderSendmail$set_control(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Send emails via sendmailR — AppenderSendmail","text":"","code":"AppenderSendmail$set_headers(x)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSendmail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send emails via sendmailR — AppenderSendmail","text":"","code":"if (FALSE) { # \\dontrun{ lgr::AppenderSendmail$new(   to = \"user@ecorp.com\",   control = list(smtpServer = \"mail.ecorp.com\"),   from = \"lgr_user@yourmail.com\" ) } # }  if (requireNamespace(\"sendmailR\")){ # requires that you have access to an SMTP server    lg <- lgr::get_logger(\"lgrExtra/test/mail\")$     set_propagate(FALSE)$     add_appender(AppenderSendmail$new(       from = \"ceo@ecorp.com\",       to = \"some.guy@ecorp.com\",     control = list(smtpServer = \"mail.somesmptserver.com\")   ))   # cleanup   invisible(lg$config(NULL)) }"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":null,"dir":"Reference","previous_headings":"","what":"Log to the POSIX system log — AppenderSyslog","title":"Log to the POSIX system log — AppenderSyslog","text":"Appender writes syslog supported POSIX platforms. Requires rsyslog package.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log to the POSIX system log — AppenderSyslog","text":"$new() method returns R6::R6 inherits lgr::Appender can uses appender lgr::Logger.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Log to the POSIX system log — AppenderSyslog","text":"lgr::Filterable -> lgr::Appender -> AppenderSyslog","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Log to the POSIX system log — AppenderSyslog","text":"syslog_levels. Either named character vector function mapping lgr lgr::log_levels rsyslog log levels. See $set_syslog_levels().","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Log to the POSIX system log — AppenderSyslog","text":"identifier character scalar. string identifying process; NULL defaults logger name syslog_levels. Either named character vector function mapping lgr lgr::log_levels rsyslog log levels. See $set_syslog_levels().","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Log to the POSIX system log — AppenderSyslog","text":"lgr::Filterable$add_filter() lgr::Filterable$filter() lgr::Filterable$remove_filter() lgr::Filterable$set_filters() lgr::Appender$format() lgr::Appender$set_layout() lgr::Appender$set_threshold()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Log to the POSIX system log — AppenderSyslog","text":"AppenderSyslog$new() AppenderSyslog$append() AppenderSyslog$set_syslog_levels() AppenderSyslog$set_identifier()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to the POSIX system log — AppenderSyslog","text":"","code":"AppenderSyslog$new(   identifier = NULL,   threshold = NA_integer_,   layout = LayoutFormat$new(\"%m\"),   filters = NULL,   syslog_levels = c(CRITICAL = \"fatal\", ERR = \"error\", WARNING = \"warn\", INFO = \"info\",     DEBUG = \"debug\", DEBUG = \"trace\") )"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to the POSIX system log — AppenderSyslog","text":"","code":"AppenderSyslog$append(event)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"method-set-syslog-levels-","dir":"Reference","previous_headings":"","what":"Method set_syslog_levels()","title":"Log to the POSIX system log — AppenderSyslog","text":"Define conversion lgr syslog log levels","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to the POSIX system log — AppenderSyslog","text":"","code":"AppenderSyslog$set_syslog_levels(x)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log to the POSIX system log — AppenderSyslog","text":"x named character vector mapping whose names log levels understood rsyslog::syslog() whose values lgr log levels (either character numeric) function takes vector lgr log levels input returns character vector log levels rsyslog::syslog().","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"method-set-identifier-","dir":"Reference","previous_headings":"","what":"Method set_identifier()","title":"Log to the POSIX system log — AppenderSyslog","text":"Set string identify process.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Log to the POSIX system log — AppenderSyslog","text":"","code":"AppenderSyslog$set_identifier(x)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/AppenderSyslog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log to the POSIX system log — AppenderSyslog","text":"","code":"if (requireNamespace(\"rsyslog\", quietly = TRUE) && Sys.info()[[\"sysname\"]] == \"Linux\") {   lg <- lgr::get_logger(\"rsyslog/test\")   lg$add_appender(AppenderSyslog$new(), \"syslog\")   lg$info(\"A test message\")   print(system(\"journalctl -t 'rsyslog/test'\"))    invisible(lg$config(NULL))  # cleanup } #> INFO  [07:35:29.278] A test message #> [1] 0"},{"path":"https://s-fleck.github.io/lgrExtra/reference/DynatraceLayout.html","id":null,"dir":"Reference","previous_headings":"","what":"A json layout for Dynatrace ingestion — transform_event_dynatrace","title":"A json layout for Dynatrace ingestion — transform_event_dynatrace","text":"Transforms lgr::LogEvent object list suitable Dynatrace ingestion.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/DynatraceLayout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A json layout for Dynatrace ingestion — transform_event_dynatrace","text":"","code":"transform_event_dynatrace(event)  DynatraceLayout"},{"path":"https://s-fleck.github.io/lgrExtra/reference/DynatraceLayout.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A json layout for Dynatrace ingestion — transform_event_dynatrace","text":"object class LayoutJson (inherits Layout, R6) length 17.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/DynatraceLayout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A json layout for Dynatrace ingestion — transform_event_dynatrace","text":"event lgr::LogEvent object.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/DynatraceLayout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A json layout for Dynatrace ingestion — transform_event_dynatrace","text":"list key-value pairs ready serialized JSON Dynatrace.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/ElasticSearchLayout.html","id":null,"dir":"Reference","previous_headings":"","what":"A json layout for Elasticsearch ingestion — transform_event_elasticsearch","title":"A json layout for Elasticsearch ingestion — transform_event_elasticsearch","text":"Transforms lgr::LogEvent object list suitable ElasticSearch ingestion.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/ElasticSearchLayout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A json layout for Elasticsearch ingestion — transform_event_elasticsearch","text":"","code":"transform_event_elasticsearch(event)  ElasticSearchLayout"},{"path":"https://s-fleck.github.io/lgrExtra/reference/ElasticSearchLayout.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A json layout for Elasticsearch ingestion — transform_event_elasticsearch","text":"object class LayoutJson (inherits Layout, R6) length 17.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/ElasticSearchLayout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A json layout for Elasticsearch ingestion — transform_event_elasticsearch","text":"event lgr::LogEvent object.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/ElasticSearchLayout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A json layout for Elasticsearch ingestion — transform_event_elasticsearch","text":"list key-value pairs ready serialized JSON ElasticSearch","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Format log events for output to databases — LayoutDbi","title":"Format log events for output to databases — LayoutDbi","text":"LayoutDbi can contain col_types AppenderDbi can use create new database tables; however, safer flexible set log table manually SQL CREATE TABLE statement instead.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format log events for output to databases — LayoutDbi","text":"$new() method returns R6::R6 inherits lgr::Layout can used Layout lgr::Appender.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format log events for output to databases — LayoutDbi","text":"LayoutDbi parameters fmt, timestamp_fmt, colors pad_levels applied console output via $show() method influence database inserts way. inserts pre-processed methods $format_data(), $format_colnames $format_tablenames. format LogEvents directly, data.table representations (see lgr::.data.table.LogEvent), well column- table names.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"database-specific-layouts","dir":"Reference","previous_headings":"","what":"Database Specific Layouts","title":"Format log events for output to databases — LayoutDbi","text":"Different databases different data types features. Currently following LayoutDbi subclasses exist deal specific databases, list expected grow lgrExtra matures: LayoutSqlite: SQLite databases LayoutPostgres: Postgres databases LayoutMySql: MySQL databases LayoutDb2: DB2 databases utility function select_dbi_layout() tries returns appropriate Layout DBI connection, work odbc JDBC connections specify layout manually. creating custom DB-specific layouts usually enough create R6::R6 class inherits LayoutDbi choosing different defaults $format_table_name, $format_colnames $format_data.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Format log events for output to databases — LayoutDbi","text":"lgr::Layout -> lgr::LayoutFormat -> LayoutDbi","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Format log events for output to databases — LayoutDbi","text":"format_table_name function format table name inserting database. function applied $table_name inserting database. example , databases prefer lowercase names, uppercase. SQL updates case-agnostic, sadly practice DBI backends behave consistently regard. format_colnames function format column names inserting database. function applied column names data frame inserted database. format_data function format data inserting database. function applied whole data frame. names columns contain data serialized JSON strings","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Format log events for output to databases — LayoutDbi","text":"col_types named character vector column types supported target database. NULL used AppenderDbi similar Appenders create new database table instantiation Appender. target database table already exists, col_types used. names columns contain data serialized JSON strings col_names column names target table (names(lo$col_types))","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Format log events for output to databases — LayoutDbi","text":"lgr::Layout$set_excluded_fields() lgr::LayoutFormat$format_event() lgr::LayoutFormat$read() lgr::LayoutFormat$set_colors() lgr::LayoutFormat$set_fmt() lgr::LayoutFormat$set_pad_levels() lgr::LayoutFormat$set_timestamp_fmt()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Format log events for output to databases — LayoutDbi","text":"LayoutDbi$new() LayoutDbi$set_col_types() LayoutDbi$set_serialized_cols() LayoutDbi$sql_create_table() LayoutDbi$toString() LayoutDbi$clone()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to databases — LayoutDbi","text":"","code":"LayoutDbi$new(   col_types = c(level = \"integer\", timestamp = \"timestamp\", logger = \"varchar(256)\",     caller = \"varchar(256)\", msg = \"varchar(2048)\", rawMsg = \"varchar(2048)\"),   serialized_cols = NULL,   fmt = \"%L [%t] %m  %f\",   timestamp_fmt = \"%Y-%m-%d %H:%M:%S\",   colors = getOption(\"lgr.colors\", list()),   pad_levels = \"right\",   format_table_name = identity,   format_colnames = identity,   format_data = data.table::as.data.table )"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to databases — LayoutDbi","text":"","code":"LayoutDbi$set_col_types(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to databases — LayoutDbi","text":"","code":"LayoutDbi$set_serialized_cols(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to databases — LayoutDbi","text":"","code":"LayoutDbi$sql_create_table(table)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to databases — LayoutDbi","text":"","code":"LayoutDbi$toString()"},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Format log events for output to databases — LayoutDbi","text":"objects class cloneable method.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to databases — LayoutDbi","text":"","code":"LayoutDbi$clone(deep = FALSE)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutDbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format log events for output to databases — LayoutDbi","text":"deep Whether make deep clone.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Format log events for output to ElasticSearch — LayoutElasticSearch","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"Similar lgr::LayoutJson, modifications prepare data ElasticSearch.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"$new() method returns R6::R6 inherits lgr::Layout can used Layout lgr::Appender.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"lgr::Layout -> LayoutElasticSearch","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"toJSON_args list values passed jsonlite::toJSON() transform_event function single argument event takes lgr::LogEvent returns list.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"lgr::Layout$set_excluded_fields() lgr::Layout$toString()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"LayoutElasticSearch$new() LayoutElasticSearch$format_event() LayoutElasticSearch$set_toJSON_args() LayoutElasticSearch$set_transform_event() LayoutElasticSearch$clone()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"","code":"LayoutElasticSearch$new(   toJSON_args = list(auto_unbox = TRUE),   transform_event = function(event) get(\"values\", event) )"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"","code":"LayoutElasticSearch$format_event(event)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"","code":"LayoutElasticSearch$set_toJSON_args(x)"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"","code":"LayoutElasticSearch$set_transform_event(x)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"objects class cloneable method.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"","code":"LayoutElasticSearch$clone(deep = FALSE)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/LayoutElasticSearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format log events for output to ElasticSearch — LayoutElasticSearch","text":"deep Whether make deep clone.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":null,"dir":"Reference","previous_headings":"","what":"Serializers — Serializer","title":"Serializers — Serializer","text":"Serializers used AppenderDbi store multiple values single text column Database table. Usually just want use default SerializerJson. Please AppenderDbi well Serializers still experimental.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serializers — Serializer","text":"Serializer R6::R6 object AppenderDbi.","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Serializers — Serializer","text":"Serializer$clone()","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Serializers — Serializer","text":"objects class cloneable method.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serializers — Serializer","text":"","code":"Serializer$clone(deep = FALSE)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serializers — Serializer","text":"deep Whether make deep clone.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Serializers — Serializer","text":"lgrExtra::Serializer -> SerializerJson","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"public-methods-1","dir":"Reference","previous_headings":"","what":"Public methods","title":"Serializers — Serializer","text":"SerializerJson$new() SerializerJson$serialize() SerializerJson$clone()","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Serializers — Serializer","text":"","code":"SerializerJson$new(   cols = \"*\",   cols_exclude = c(\"level\", \"timestamp\", \"logger\", \"caller\", \"msg\"),   col_filter = is.atomic,   max_nchar = 2048L,   auto_unbox = TRUE )"},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Serializers — Serializer","text":"","code":"SerializerJson$serialize(event)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"method-clone--1","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Serializers — Serializer","text":"objects class cloneable method.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Serializers — Serializer","text":"","code":"SerializerJson$clone(deep = FALSE)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serializers — Serializer","text":"deep Whether make deep clone.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/Serializer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serializers — Serializer","text":"","code":"# The defaul Serializer for 'custom fields' columns SerializerJson$new() #> <SerializerJson> #>   Inherits from: <Serializer> #>   Public: #>     auto_unbox: TRUE #>     clone: function (deep = FALSE)  #>     col_filter: function (x)  #>     cols: * #>     cols_exclude: level timestamp logger caller msg #>     initialize: function (cols = \"*\", cols_exclude = c(\"level\", \"timestamp\",  #>     max_nchar: function (x, type = \"chars\", allowNA = FALSE, keepNA = NA)  #>     serialize: function (event)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/lgrExtra-package.html","id":null,"dir":"Reference","previous_headings":"","what":"lgrExtra: Extra Appenders for 'lgr' — lgrExtra-package","title":"lgrExtra: Extra Appenders for 'lgr' — lgrExtra-package","text":"Additional appenders logging package 'lgr' support logging 'Elasticsearch', 'Dynatrace', 'AWSCloudWatchLog', databases, 'syslog', email- push notifications, .","code":""},{"path":[]},{"path":"https://s-fleck.github.io/lgrExtra/reference/lgrExtra-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lgrExtra: Extra Appenders for 'lgr' — lgrExtra-package","text":"Maintainer: Stefan Fleck stefan.b.fleck@gmail.com (ORCID) contributors: Jimmy Briggs jimmy.briggs@jimbrig.com (ORCID) [contributor, reviewer]","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/select_dbi_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically select appropriate layout for logging to a database — select_dbi_layout","title":"Automatically select appropriate layout for logging to a database — select_dbi_layout","text":"Selects appropriate Layout database table based DBI connection - already exists database - table .","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/select_dbi_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically select appropriate layout for logging to a database — select_dbi_layout","text":"","code":"select_dbi_layout(conn, table, ...)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/select_dbi_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically select appropriate layout for logging to a database — select_dbi_layout","text":"conn DBI connection table character scalar. name table log . ... passed appropriate LayoutDbi subclass constructor.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/unpack_json_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Unserialize data frame columns that contain JSON — unpack_json_cols","title":"Unserialize data frame columns that contain JSON — unpack_json_cols","text":"Unserialize data frame columns contain JSON","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/unpack_json_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unserialize data frame columns that contain JSON — unpack_json_cols","text":"","code":"unpack_json_cols(x, cols)  # S3 method for class 'data.table' unpack_json_cols(x, cols)  # S3 method for class 'data.frame' unpack_json_cols(x, cols)"},{"path":"https://s-fleck.github.io/lgrExtra/reference/unpack_json_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unserialize data frame columns that contain JSON — unpack_json_cols","text":"x data.frame cols character vector. names text columns containing JSON strings expanded.","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/unpack_json_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unserialize data frame columns that contain JSON — unpack_json_cols","text":"data.frame additional columns expanded columns containing JSON","code":""},{"path":"https://s-fleck.github.io/lgrExtra/reference/unpack_json_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unserialize data frame columns that contain JSON — unpack_json_cols","text":"","code":"x <- data.frame(   name = \"example data\",   fields = '{\"letters\":[\"a\",\"b\",\"c\"], \"LETTERS\":[\"A\",\"B\",\"C\"]}',   stringsAsFactors = FALSE ) res <- unpack_json_cols(x, \"fields\") res #>           name letters LETTERS #> 1 example data a, b, c A, B, C res$letters[[1]] #> [1] \"a\" \"b\" \"c\""},{"path":"https://s-fleck.github.io/lgrExtra/news/index.html","id":"lgrextra-010","dir":"Changelog","previous_headings":"","what":"lgrExtra 0.1.0","title":"lgrExtra 0.1.0","text":"CRAN release: 2025-06-20 Add AppenderDynatrace (experimental preview) Add AppenderPool (thx @jimbrig) Add AppenderAWSCloudWatchLog logging AWS CloudWatch (#9) (thx @DyfanJones)","code":""}]
